generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String       @id @default(uuid())
  email    String       @unique
  password String
  isAdmin  Boolean      @default(false)
  profile  UserProfile?
}

model UserProfile {
  user                  User            @relation(fields: [id], references: [id])
  id                    String          @id @unique
  discordId             String          @unique
  cumulativeScore       Int             @default(0)
  nParticipatedContests Int             @default(0)
  contestParticipation  UserInContest[]
}

model Contest {
  id            Int             @id @default(autoincrement())
  date          DateTime        @default(now()) @db.Date
  nQuestions    Int             @default(0)
  nParticipants Int             @default(0)
  contestants   UserInContest[]
}

model UserInContest {
  contestant         UserProfile  @relation(fields: [contestantId], references: [id])
  contestantId       String
  contest            Contest      @relation(fields: [contestId], references: [id])
  contestId          Int
  nQuestionsSolved   Int          @default(0)
  questionsSolved    Int[]
  questionSolvedTime DateTime[]
  submissions        Submission[]
  score              Int          @default(0)

  @@id([contestantId, contestId])
  @@unique([contestantId, contestId])
}

model Submission {
  submitter   UserInContest    @relation(fields: [submitterId, contestId], references: [contestantId, contestId])
  submitterId String
  contestId   Int
  token       String           @id
  isPassed    Boolean          @default(false)
  status      SubmissionStatus @default(UNKNOWN)
  submittedAt DateTime         @default(now())
}

enum SubmissionStatus {
  PASSED
  COMPILATION_ERROR
  RUNTIME_ERROR
  WRONG_ANSWER
  UNKNOWN
}
